name: Examples
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version:
          - '1'
        os:
          - ubuntu-latest
        arch:
          - x64
        allow_failures:
          - julia: nightly
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Examples project instantiation
        shell: julia --project=examples {0}
        run: |
          using Pkg
          Pkg.add([
              PackageSpec(name="StarAlgebras", rev="main"),
          ])
          Pkg.instantiate()
      - name: Example Câ‚‚ linear action
        shell: julia --project=examples {0}
        run: |
          include("examples/preamble.jl");
          include("examples/ex_C2.linear.jl")
      - name: Example a polynomial with Sym(4)-symmetry
        shell: julia --project=examples {0}
        run: |
          include("examples/preamble.jl");
          include("examples/ex_S4.jl")
      - name: Example Motzkin polynomial
        shell: julia --project=examples {0}
        run: |
          include("examples/preamble.jl");
          include("examples/ex_motzkin.jl")
      - name: Example Robinson Form
        shell: julia --project=examples {0}
        run: |
          include("examples/preamble.jl");
          include("examples/ex_robinson_form.jl")

